<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.mldn</groupId>
	<artifactId>mldnspring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>mldnspring</name>
	<url>http://maven.apache.org</url>

	<properties>
		<mldnspring.version>0.0.1-SNAPSHOT</mldnspring.version>
		<!-- 【BEFORE】配置Spring的版本管理【BEFORE】 -->
		<spring.version>5.0.0.RELEASE</spring.version>
		<!-- 【AFTER】配置Spring的版本管理【AFTER】 -->
		<!-- 【BEFORE】其它开发包的版本管理【BEFORE】 -->
		<mysql.version>5.1.5</mysql.version>
		<junit.version>4.12</junit.version>
		<quartz.version>2.3.0</quartz.version>
		<log4j.version>2.9.1</log4j.version>
		<slf4j.version>1.7.25</slf4j.version>
		<cxf.version>3.2.0</cxf.version>
		<jackson.version>2.9.2</jackson.version>

		<fileupload.version>1.3.3</fileupload.version>
		<commons-io.version>2.5</commons-io.version>
		<jstl.version>1.2</jstl.version>
		<!-- 【AFTER】其它开发包的版本管理【AFTER】 -->

		<!-- 编写自定义的模块依赖配置 -->
		<mldnspring.version>0.0.1-SNAPSHOT</mldnspring.version>

		<!-- 【BEFORE】基础的pom环境属性【BEFORE】 -->
		<compiler.version>3.6.1</compiler.version>
		<javadoc.version>2.10.4</javadoc.version>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 【AFTER】基础的pom环境属性【AFTER】 -->
		<profiles.dir>src/main/profiles</profiles.dir>
		<resources.dir>src/main/resources</resources.dir>
	</properties>
	<profiles>	<!-- 明确的进行具体的资源名称的配置，这个名称是在maven打包的时候使用的名称 -->
		<profile>
			<id>dev</id>
			<properties>
				<profile.dir>${profiles.dir}/dev</profile.dir>
			</properties>
			<activation>	<!-- 如果在编译的时候没有设置任何的profile名字，则此配置生效 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>beta</id>
			<properties>
				<profile.dir>${profiles.dir}/beta</profile.dir>
			</properties>
		</profile>
		<profile>
			<id>product</id>
			<properties>
				<profile.dir>${profiles.dir}/product</profile.dir>
			</properties>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>cn.mldn</groupId>
				<artifactId>mldnspring-goods-api</artifactId>
				<version>${mldnspring.version}</version>
			</dependency>
			<dependency>
				<groupId>cn.mldn</groupId>
				<artifactId>mldnspring-goods-service</artifactId>
				<version>${mldnspring.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>



			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>


			<dependency>
				<groupId>cn.mldn</groupId>
				<artifactId>mldnspring-ws-api</artifactId>
				<version>${mldnspring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>




			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>mldnspring</finalName>
		<resources>
			<resource>
				<!-- 此处的属性是profile中统一定义的路径的名称，不同的配置文件有不同的子目录 -->
				<directory>${profile.dir}</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>${resources.dir}</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc.version}</version>
				<configuration>
					<encode>${project.build.sourceEncoding}</encode>
				</configuration>
				<executions>	<!-- 进行执行配置 -->
					<execution>
						<id>javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encode>${project.build.sourceEncoding}</encode>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>mldnspring-ioc</module>
		<module>mldnspring-di</module>
		<module>mldnspring-context</module>
		<module>mldnspring-resource</module>
		<module>mldnspring-spel</module>
		<module>mldnspring-schedule</module>
		<module>mldnspring-aop</module>
		<module>mldnspring-jdbc</module>
		<module>mldnspring-transaction</module>
		<module>mldnspring-ws-server</module>
		<module>mldnspring-ws-client</module>
		<module>mldnspring-ws-api</module>
		<module>mldnspring-mvc</module>
		<module>mldnspring-springmvc</module>
		<module>mldnspring-upload</module>
		<module>mldnspring-interceptor</module>
		<module>mldnspring-goods-api</module>
		<module>mldnspring-goods-service</module>
		<module>mldnspring-goods-web</module>
	</modules>
</project>